version: '3.3'

services:
  redis:
    image: redis:3.2-alpine
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/var/lib/redis/data'
    networks:
      - backend

  elasticsearch:
    image: ${ELASTICSEARCH_IMAGE_NAME}
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - backend

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_IMAGE_NAME=${MYSQL_IMAGE_NAME}
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      - ${DATA_PATH}/mysql/${MYSQL_SUBPATH}:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  postgres:
    image: ${POSTGRES_IMAGE_NAME}
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  kubernetes:
    build:
      context: ./kubernetes
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    volumes:
      - aws_config:/root/.aws
      - ssh_config:/root/.ssh
      - kube_config:/root/.kube

  ruby:
    image: ${RUBY_IMAGE_NAME}
    build:
      context: ./ruby
      dockerfile: "${MY_RUBY_VERSION}-Dockerfile"
      args:
        - RAILS_VERSION=${RUBY_RAILS_VERSION}
        - INSTALL_BUNDLER=${RUBY_INSTALL_BUNDLER}
        - INSTALL_NODE=${RUBY_INSTALL_NODE}
        - INSTALL_YARN=${RUBY_INSTALL_YARN}
        - INSTALL_POSTGRES=${RUBY_INSTALL_POSTGRES}
        - INSTALL_MYSQL=${RUBY_INSTALL_MYSQL}
        - INSTALL_QT_DEPS=${RUBY_INSTALL_QT_DEPS}
        - INSTALL_XVFB=${RUBY_INSTALL_XVFB}
        - INSTALL_DOCKERIZE=${RUBY_INSTALL_DOCKERIZE}
    command: rails-up
    environment:
      - APP_NAME=${APP}
      - DB_HOST=${RUBY_DB_HOST}
      - DATABASE_HOST=${RUBY_DB_HOST}
      - DB_PORT=${RUBY_DB_PORT}
      - DB_USER=${RUBY_DB_USER}
      - DATABASE_USER=${RUBY_DB_USER}
      - DB_PASSWORD=${RUBY_DB_PASSWORD}
      - DATABASE_PASSWORD=${RUBY_DB_PASSWORD}
      - DB_ADAPTER=${RUBY_DB_ADAPTER}
      - DATABASE_ADAPTER=${RUBY_DB_ADAPTER}
      - ADMIN_EMAIL=taufek@gmail.com
      - REDIS_PROVIDER=redis://redis:6379
      - REDIS_URL=redis://redis:6379
    ports:
      - "${RUBY_RAILS_PORT}:3000"
      - "${RUBY_WEBPACK_DEV_SERVER_PORT}:3035"
    tty: true
    stdin_open: true
    volumes:
      - ./ruby/bin/rails-new:/usr/local/bin/rails-new
      - ./ruby/bin/rails-up:/usr/local/bin/rails-up
      - ./ruby/template/database.yml:/template/database.yml
    networks:
      - frontend
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "5k"
        max-file: "5"

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

volumes:
  mysql:
    driver: "local"
  postgres:
    driver: "local"
  redis:
    driver: "local"
  esdata:
    driver: "local"
  aws_config:
    driver: "local"
  ssh_config:
    driver: "local"
  kube_config:
    driver: "local"
